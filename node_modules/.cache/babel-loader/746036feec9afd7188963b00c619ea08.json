{"ast":null,"code":"var _jsxFileName = \"/Users/felixtoft/Git Repos/liveCoach/Frontend-App/src/LiveCoachView/LiveCoachMap.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './CoachLive.css';\nimport { Stage, Layer, Rect, Text, Circle, Line, Image, Group } from 'react-konva';\nimport Konva from 'konva';\nimport NoteView from './NoteView.js';\nimport MapImg from './MapImg.jpeg';\nexport default function Map() {\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    id: \"mapContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NoteView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    id: \"mapRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n}\n\nclass Drawing extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lines: [],\n      currentTool: 'brush',\n      eraser: false,\n      brush: true\n    };\n\n    this.handleMouseDown = () => {\n      console.log('IMG STATE ' + MapImg);\n      this._drawing = true;\n\n      if (this.state.brush === true) {\n        // add line\n        this.setState({\n          lines: [...this.state.lines, []]\n        });\n      } else if (this.state.eraser === true) {\n        const stage = this.stageRef.getStage();\n        const point = stage.getPointerPosition();\n        const xRange = [point.x - 15, point.x + 15];\n        const yRange = [point.y - 15, point.y + 15];\n        console.log('ERASING pointX: ' + point.x + ' point y ' + point.y);\n        const tempLines = this.state.lines;\n\n        for (let i = 0; i < tempLines.length; i++) {\n          const currentLine = tempLines[i];\n\n          for (let z = 0; z < currentLine.length - 1; z = z + 2) {\n            if (currentLine[z] > xRange[0] && currentLine[z] < xRange[1]) {\n              if (currentLine[z + 1] > yRange[0] && currentLine[z + 1] < yRange[1]) {\n                tempLines.splice(i, 1);\n                this.setState({\n                  lines: tempLines\n                });\n                return;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    this.handleMouseMove = e => {\n      //  no drawing - skipping\n      //  alert('drawing ' + !this._drawing + ' erasing ' + this.state.erasing)\n      if (!this._drawing) {\n        return;\n      }\n\n      if (this.state.brush === true) {\n        const stage = this.stageRef.getStage();\n        const point = stage.getPointerPosition();\n        const {\n          lines\n        } = this.state;\n        let lastLine = lines[lines.length - 1]; // add point\n\n        lastLine = lastLine.concat([point.x, point.y]); // replace last\n\n        lines.splice(lines.length - 1, 1, lastLine);\n        this.setState({\n          lines: lines.concat()\n        });\n      }\n    };\n\n    this.handleMouseUp = () => {\n      this._drawing = false;\n    };\n\n    this.eraserClick = evt => {\n      alert('eraser on');\n      this.setState({\n        eraser: true,\n        currentTool: 'eraser',\n        brush: false\n      });\n    };\n\n    this.brushClick = evt => {\n      alert('brush on');\n      this.setState({\n        eraser: false,\n        currentTool: 'brush',\n        brush: true\n      });\n    };\n  }\n\n  render() {\n    const stageWidth = 600;\n    const stageHeight = 600;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.brushClick,\n      id: \"eraserButton\",\n      className: this.state.currentTool === 'brush' ? 'activeTool' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Brush\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.eraserClick,\n      id: \"brushButton\",\n      className: this.state.currentTool === 'eraser' ? 'activeTool' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"Eraser\"))), /*#__PURE__*/React.createElement(Stage, {\n      container: '#mapRow',\n      width: stageWidth,\n      height: stageHeight,\n      onContentMousedown: this.handleMouseDown,\n      onContentMousemove: this.handleMouseMove,\n      onContentMouseup: this.handleMouseUp,\n      ref: node => {\n        this.stageRef = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Layer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Rect, {\n      width: stageWidth / 2,\n      height: stageHeight / 2,\n      image: MapImg,\n      fill: 'white',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      image: MapImg,\n      width: 100,\n      height: 100,\n      x: 200,\n      y: 50,\n      ref: node => {\n        this.imageNode = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), this.state.lines.map((line, i) => /*#__PURE__*/React.createElement(Line, {\n      key: i,\n      points: line,\n      stroke: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/felixtoft/Git Repos/liveCoach/Frontend-App/src/LiveCoachView/LiveCoachMap.js"],"names":["React","Component","Container","Row","Col","Stage","Layer","Rect","Text","Circle","Line","Image","Group","Konva","NoteView","MapImg","Map","Drawing","state","lines","currentTool","eraser","brush","handleMouseDown","console","log","_drawing","setState","stage","stageRef","getStage","point","getPointerPosition","xRange","x","yRange","y","tempLines","i","length","currentLine","z","splice","handleMouseMove","e","lastLine","concat","handleMouseUp","eraserClick","evt","alert","brushClick","render","stageWidth","stageHeight","node","imageNode","map","line"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './CoachLive.css';\n\n\nimport { Stage, Layer, Rect, Text, Circle, Line, Image, Group } from 'react-konva';\nimport Konva from 'konva';\nimport NoteView from './NoteView.js'\nimport MapImg from './MapImg.jpeg'\n\n\nexport default function Map() {\n\n  return (\n    <Container fluid id=\"mapContainer\">\n      <NoteView />\n      <Row id=\"mapRow\">\n        <Drawing />\n      </Row>\n    </Container>\n  );\n}\n\n\n\nclass Drawing extends Component {\n  state = {\n    lines: [],\n    currentTool: 'brush',\n    eraser: false,\n    brush: true,\n  };\n\n\n\n  handleMouseDown = () => {\n    console.log('IMG STATE ' + MapImg);\n      this._drawing = true;\n\n      if(this.state.brush === true){\n        // add line\n        this.setState({\n          lines: [...this.state.lines, []]\n        });\n      }\n      else if(this.state.eraser === true) {\n        const stage = this.stageRef.getStage();\n        const point = stage.getPointerPosition();\n\n\n        const xRange = [point.x - 15, point.x + 15]\n\n        const yRange = [point.y - 15, point.y + 15]\n\n\n\n\n        console.log('ERASING pointX: ' + point.x +' point y ' + point.y)\n\n        const tempLines = this.state.lines;\n\n        for(let i = 0; i < tempLines.length; i++) {\n          const currentLine = tempLines[i];\n\n          for(let z = 0; z < currentLine.length - 1; z = z+2) {\n\n            if(currentLine[z] > xRange[0] && currentLine[z] < xRange[1]) {\n              if(currentLine[z + 1] > yRange[0] && currentLine[z + 1] < yRange[1]) {\n                tempLines.splice(i, 1);\n\n                this.setState ({\n                  lines: tempLines\n                });\n                return;\n              }\n            }\n          }\n        }\n      }\n  };\n\n  handleMouseMove = e => {\n    //  no drawing - skipping\n    //  alert('drawing ' + !this._drawing + ' erasing ' + this.state.erasing)\n\n    if (!this._drawing) {\n      return;\n    }\n\n\n    if(this.state.brush === true) {\n      const stage = this.stageRef.getStage();\n      const point = stage.getPointerPosition();\n      const { lines } = this.state;\n\n      let lastLine = lines[lines.length - 1];\n      // add point\n      lastLine = lastLine.concat([point.x, point.y]);\n\n      // replace last\n      lines.splice(lines.length - 1, 1, lastLine);\n      this.setState({\n        lines: lines.concat()\n      });\n    }\n\n  };\n\n  handleMouseUp = () => {\n    this._drawing = false;\n  };\n\n  eraserClick = (evt) => {\n    alert('eraser on');\n    this.setState ({\n      eraser: true,\n      currentTool: 'eraser',\n      brush: false,\n    })\n  }\n  brushClick = (evt) => {\n    alert('brush on');\n    this.setState ({\n      eraser: false,\n      currentTool: 'brush',\n      brush: true,\n    })\n  }\n\n  render() {\n    const stageWidth = 600;\n    const stageHeight = 600;\n\n    return (\n      <div>\n        <Container>\n          <Row>\n            <button\n              onClick={this.brushClick}\n              id=\"eraserButton\"\n              className={this.state.currentTool === 'brush' ? 'activeTool' : ''}\n            >\n              Brush\n            </button>\n          </Row>\n          <Row>\n            <button\n              onClick={this.eraserClick}\n              id=\"brushButton\"\n              className={this.state.currentTool === 'eraser' ? 'activeTool' : ''}\n            >\n              Eraser\n            </button>\n          </Row>\n        </Container>\n\n\n        <Stage\n          container={'#mapRow'}\n          width={stageWidth}\n          height={stageHeight}\n          onContentMousedown={this.handleMouseDown}\n          onContentMousemove={this.handleMouseMove}\n          onContentMouseup={this.handleMouseUp}\n          ref={node => {\n            this.stageRef = node;\n          }}\n        >\n          <Layer>\n            <Rect\n            width={stageWidth / 2}\n            height={stageHeight / 2}\n            image={MapImg}\n            fill={'white'}\n            />\n            <Image\n              image={MapImg}\n              width={100}\n              height={100}\n              x={200}\n              y={50}\n              ref={node => {\n                this.imageNode = node;\n              }}\n            />\n            {this.state.lines.map((line, i) => (\n              <Line key={i} points={line} stroke=\"red\" />\n            ))}\n\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}