{"ast":null,"code":"var _jsxFileName = \"/Users/felixtoft/Git Repos/liveCoach/Frontend-App/src/LiveCoachView/LiveCoachMap.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './CoachLive.css';\nimport { Stage, Layer, Rect, Text, Circle, Line, Image, Group } from 'react-konva';\nimport Konva from 'konva';\nimport NoteView from './NoteView.js';\nexport default function Map() {\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    id: \"mapContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NoteView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    id: \"mapRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Drawing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n} // CODE SNIPPET FOUND ONLINE, DON'T FULLY UNDERSTAND YET\n\nclass Drawing extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lines: [],\n      erasing: false\n    };\n\n    this.handleMouseDown = () => {\n      this._drawing = true; // add line\n\n      this.setState({\n        lines: [...this.state.lines, []]\n      });\n    };\n\n    this.handleMouseMove = e => {\n      // no drawing - skipping\n      if (!this._drawing) {\n        return;\n      }\n\n      const stage = this.stageRef.getStage();\n      const point = stage.getPointerPosition();\n      const {\n        lines\n      } = this.state;\n      let lastLine = lines[lines.length - 1]; // add point\n\n      lastLine = lastLine.concat([point.x, point.y]); // replace last\n\n      lines.splice(lines.length - 1, 1, lastLine);\n      this.setState({\n        lines: lines.concat()\n      });\n    };\n\n    this.handleMouseUp = () => {\n      this._drawing = false;\n    };\n\n    this.handleClick = evt => {\n      alert('pressed');\n    };\n  }\n\n  render() {\n    const stageWidth = 600;\n    const stageHeight = 600;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Hello\"), /*#__PURE__*/React.createElement(Stage, {\n      container: '#mapRow',\n      width: stageWidth,\n      height: stageHeight,\n      onContentMousedown: this.handleMouseDown,\n      onContentMousemove: this.handleMouseMove,\n      onContentMouseup: this.handleMouseUp,\n      ref: node => {\n        this.stageRef = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Layer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Rect, {\n      width: stageWidth,\n      height: stageHeight,\n      fill: 'white',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), this.state.lines.map((line, i) => /*#__PURE__*/React.createElement(Line, {\n      key: i,\n      points: line,\n      stroke: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/felixtoft/Git Repos/liveCoach/Frontend-App/src/LiveCoachView/LiveCoachMap.js"],"names":["React","Component","Container","Row","Col","Stage","Layer","Rect","Text","Circle","Line","Image","Group","Konva","NoteView","Map","Drawing","state","lines","erasing","handleMouseDown","_drawing","setState","handleMouseMove","e","stage","stageRef","getStage","point","getPointerPosition","lastLine","length","concat","x","y","splice","handleMouseUp","handleClick","evt","alert","render","stageWidth","stageHeight","node","map","line","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './CoachLive.css';\n\n\nimport { Stage, Layer, Rect, Text, Circle, Line, Image, Group } from 'react-konva';\nimport Konva from 'konva';\nimport NoteView from './NoteView.js'\n\n\nexport default function Map() {\n\n  return (\n    <Container fluid id=\"mapContainer\">\n      <NoteView />\n      <Row id=\"mapRow\">\n        <Drawing />\n      </Row>\n    </Container>\n  );\n}\n\n\n// CODE SNIPPET FOUND ONLINE, DON'T FULLY UNDERSTAND YET\n\nclass Drawing extends Component {\n  state = {\n    lines: [],\n    erasing: false\n  };\n\n  handleMouseDown = () => {\n    this._drawing = true;\n    // add line\n    this.setState({\n      lines: [...this.state.lines, []]\n    });\n  };\n\n  handleMouseMove = e => {\n    // no drawing - skipping\n    if (!this._drawing) {\n      return;\n    }\n    const stage = this.stageRef.getStage();\n    const point = stage.getPointerPosition();\n    const { lines } = this.state;\n\n    let lastLine = lines[lines.length - 1];\n    // add point\n    lastLine = lastLine.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    this.setState({\n      lines: lines.concat()\n    });\n  };\n\n  handleMouseUp = () => {\n    this._drawing = false;\n  };\n\n  handleClick = (evt) => {\n    alert('pressed');\n  }\n\n  render() {\n    const stageWidth = 600;\n    const stageHeight = 600;\n\n    return (\n      <div>\n        <button onClick={this.handleClick}>Hello</button>\n        <Stage\n          container={'#mapRow'}\n          width={stageWidth}\n          height={stageHeight}\n          onContentMousedown={this.handleMouseDown}\n          onContentMousemove={this.handleMouseMove}\n          onContentMouseup={this.handleMouseUp}\n          ref={node => {\n            this.stageRef = node;\n          }}\n        >\n          <Layer>\n            <Rect\n            width={stageWidth}\n            height={stageHeight}\n              fill={'white'}\n            />\n\n            {this.state.lines.map((line, i) => (\n              <Line key={i} points={line} stroke=\"red\" />\n            ))}\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}