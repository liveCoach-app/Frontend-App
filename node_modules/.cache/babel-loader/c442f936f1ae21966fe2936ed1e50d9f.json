{"ast":null,"code":"var _jsxFileName = \"/Users/felixtoft/Git Repos/liveCoach/Frontend-App/src/LiveCoachView/LiveCoachMap.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './CoachLive.css';\nimport { Stage, Layer, Rect, Text, Circle, Line, Image, Group, Arrow } from 'react-konva';\nimport Konva from 'konva';\nimport NoteView from './MapHelperFunctions/NoteView.js';\nimport MapSideBar from './MapHelperFunctions/MapSideBar.js';\nimport Distance from './MapHelperFunctions/Distance.js';\nimport IsOnLine from './MapHelperFunctions/IsOnLine.js';\nimport MapImg from './MapHelperFunctions/MapImg.js';\nimport RenderArrows from './MapHelperFunctions/RenderArrows.js';\nimport RenderCircles from './MapHelperFunctions/RenderCircles.js';\nexport default function LiveCoachMap() {\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    id: \"mapContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NoteView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    id: \"mapRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n}\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lines: [],\n      circlePoints: [],\n      arrowPoints: [],\n      currentTool: 'brush',\n      eraser: false,\n      brush: true,\n      circle: false,\n      arrow: false\n    };\n\n    this.makeElement = elementArray => {\n      const stage = this.stageRef.getStage();\n      const point = stage.getPointerPosition();\n      const tempArray = elementArray;\n      tempArray[tempArray.length - 1][1] = [point.x, point.y];\n      this.setState({\n        elementArray: tempArray\n      });\n    };\n\n    this.handleMouseDown = () => {\n      this._drawing = true;\n\n      if (this.state.brush === true) {\n        this.setState({\n          lines: [...this.state.lines, []]\n        });\n      } else if (this.state.eraser === true) {\n        const stage = this.stageRef.getStage();\n        const point = stage.getPointerPosition();\n        console.log('ERASING pointX: ' + point.x + ' point y ' + point.y); //Set up ranges for eraser so that user only has to click close to line.\n\n        const xRange = [point.x - 15, point.x + 15];\n        const yRange = [point.y - 15, point.y + 15];\n        const tempLines = this.state.lines;\n\n        for (let i = 0; i < tempLines.length; i++) {\n          const currentLine = tempLines[i];\n\n          for (let z = 0; z < currentLine.length - 1; z = z + 2) {\n            if (currentLine[z] > xRange[0] && currentLine[z] < xRange[1]) {\n              if (currentLine[z + 1] > yRange[0] && currentLine[z + 1] < yRange[1]) {\n                tempLines.splice(i, 1);\n                this.setState({\n                  lines: tempLines\n                });\n                return;\n              }\n            }\n          }\n        }\n\n        const tempArrows = this.state.arrowPoints;\n\n        for (let i = 0; i < tempArrows.length; i++) {\n          const currentArrow = tempArrows[i];\n          const startpoint = currentArrow[0];\n          const endpoint = currentArrow[1];\n          const slope = (endpoint[1] - startpoint[1]) / (endpoint[0] - startpoint[0]);\n\n          if (IsOnLine(startpoint, endpoint, [point.x, point.y], slope)) {\n            tempArrows.splice(i, 1);\n            this.setState({\n              arrowPoints: tempArrows\n            });\n            return;\n          }\n        }\n      } else if (this.state.circle === true) {\n        const stage = this.stageRef.getStage();\n        const point = stage.getPointerPosition();\n        this.setState({\n          circlePoints: [...this.state.circlePoints, [[point.x, point.y], [point.x, point.y]]]\n        });\n      } else if (this.state.arrow === true) {\n        const stage = this.stageRef.getStage();\n        const point = stage.getPointerPosition();\n        this.setState({\n          arrowPoints: [...this.state.arrowPoints, [[point.x, point.y], [point.x, point.y]]]\n        });\n      }\n    };\n\n    this.handleMouseMove = e => {\n      if (!this._drawing) {\n        return;\n      }\n\n      if (this.state.brush === true) {\n        const stage = this.stageRef.getStage();\n        const point = stage.getPointerPosition();\n        const {\n          lines\n        } = this.state;\n        let lastLine = lines[lines.length - 1]; // add point\n\n        lastLine = lastLine.concat([point.x, point.y]); // replace last\n\n        lines.splice(lines.length - 1, 1, lastLine);\n        this.setState({\n          lines: lines.concat()\n        });\n      } else if (this.state.circle === true) {\n        this.makeElement(this.state.circlePoints);\n      } else if (this.state.arrow === true) {\n        this.makeElement(this.state.arrowPoints);\n      }\n    };\n\n    this.handleMouseUp = () => {\n      this._drawing = false;\n    };\n\n    this.eraserClick = evt => {\n      this.setState({\n        eraser: true,\n        currentTool: 'eraser',\n        brush: false,\n        circle: false,\n        arrow: false\n      });\n    };\n\n    this.brushClick = evt => {\n      this.setState({\n        eraser: false,\n        currentTool: 'brush',\n        brush: true,\n        circle: false,\n        arrow: false\n      });\n    };\n\n    this.clearClick = evt => {\n      this.setState({\n        lines: [],\n        circlePoints: [],\n        arrowPoints: []\n      });\n    };\n\n    this.circleClick = evt => {\n      this.setState({\n        eraser: false,\n        currentTool: 'circle',\n        brush: false,\n        circle: true,\n        arrow: false\n      });\n    };\n\n    this.arrowClick = evt => {\n      this.setState({\n        eraser: false,\n        currentTool: 'arrow',\n        brush: false,\n        circle: false,\n        arrow: true\n      });\n    };\n  }\n\n  render() {\n    const stageWidth = window.innerWidth / 2.4;\n    const stageHeight = window.innerWidth / 2.4;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"MapDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MapSideBar, {\n      brushClick: this.brushClick,\n      arrowClick: this.arrowClick,\n      circleClick: this.circleClick,\n      clearClick: this.clearClick,\n      eraserClick: this.eraserClick,\n      currentTool: this.state.currentTool,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Stage, {\n      container: '#mapRow',\n      width: stageWidth,\n      height: stageHeight,\n      onContentMousedown: this.handleMouseDown,\n      onContentMousemove: this.handleMouseMove,\n      onContentMouseup: this.handleMouseUp,\n      ref: node => {\n        this.stageRef = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Layer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MapImg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Layer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, RenderCircles(this.state.circlePoints)), /*#__PURE__*/React.createElement(Layer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, RenderArrows(this.state.arrowPoints)), /*#__PURE__*/React.createElement(Layer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, this.state.lines.map((line, i) => /*#__PURE__*/React.createElement(Line, {\n      key: i,\n      points: line,\n      stroke: \"red\",\n      fill: 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 50\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/felixtoft/Git Repos/liveCoach/Frontend-App/src/LiveCoachView/LiveCoachMap.js"],"names":["React","Component","Container","Row","Col","Stage","Layer","Rect","Text","Circle","Line","Image","Group","Arrow","Konva","NoteView","MapSideBar","Distance","IsOnLine","MapImg","RenderArrows","RenderCircles","LiveCoachMap","Map","state","lines","circlePoints","arrowPoints","currentTool","eraser","brush","circle","arrow","makeElement","elementArray","stage","stageRef","getStage","point","getPointerPosition","tempArray","length","x","y","setState","handleMouseDown","_drawing","console","log","xRange","yRange","tempLines","i","currentLine","z","splice","tempArrows","currentArrow","startpoint","endpoint","slope","handleMouseMove","e","lastLine","concat","handleMouseUp","eraserClick","evt","brushClick","clearClick","circleClick","arrowClick","render","stageWidth","window","innerWidth","stageHeight","node","map","line"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './CoachLive.css';\n\n\nimport { Stage, Layer, Rect, Text, Circle, Line, Image, Group, Arrow } from 'react-konva';\nimport Konva from 'konva';\n\nimport NoteView from './MapHelperFunctions/NoteView.js'\nimport MapSideBar from './MapHelperFunctions/MapSideBar.js'\nimport Distance from  './MapHelperFunctions/Distance.js'\nimport IsOnLine from './MapHelperFunctions/IsOnLine.js'\nimport MapImg from './MapHelperFunctions/MapImg.js'\nimport RenderArrows from './MapHelperFunctions/RenderArrows.js'\nimport RenderCircles from './MapHelperFunctions/RenderCircles.js'\n\n\n\nexport default function LiveCoachMap() {\n  return (\n    <Container fluid id=\"mapContainer\">\n      <NoteView />\n      <Row id=\"mapRow\">\n        <Map />\n      </Row>\n    </Container>\n  );\n}\n\nclass Map extends Component {\n\n  state = {\n    lines: [],\n    circlePoints: [],\n    arrowPoints: [],\n    currentTool: 'brush',\n    eraser: false,\n    brush: true,\n    circle: false,\n    arrow: false,\n  };\n\n\n  makeElement = (elementArray) => {\n    const stage = this.stageRef.getStage();\n    const point = stage.getPointerPosition();\n    const tempArray = elementArray;\n    tempArray[tempArray.length - 1][1] = [point.x, point.y];\n    this.setState({\n      elementArray: tempArray\n    })\n  }\n\n  handleMouseDown = () => {\n\n    this._drawing = true;\n\n    if(this.state.brush === true){\n      this.setState({\n        lines: [...this.state.lines, []]\n      });\n    }\n    else if(this.state.eraser === true) {\n      const stage = this.stageRef.getStage();\n      const point = stage.getPointerPosition();\n      console.log('ERASING pointX: ' + point.x +' point y ' + point.y)\n\n      //Set up ranges for eraser so that user only has to click close to line.\n      const xRange = [point.x - 15, point.x + 15]\n      const yRange = [point.y - 15, point.y + 15]\n      const tempLines = this.state.lines;\n      for(let i = 0; i < tempLines.length; i++) {\n        const currentLine = tempLines[i];\n        for(let z = 0; z < currentLine.length - 1; z = z+2) {\n          if(currentLine[z] > xRange[0] && currentLine[z] < xRange[1]) {\n            if(currentLine[z + 1] > yRange[0] && currentLine[z + 1] < yRange[1]) {\n              tempLines.splice(i, 1);\n\n              this.setState ({\n                lines: tempLines\n              });\n              return;\n            }\n          }\n        }\n      }\n      const tempArrows = this.state.arrowPoints;\n      for(let i = 0; i < tempArrows.length; i++) {\n        const currentArrow = tempArrows[i];\n        const startpoint = currentArrow[0]\n        const endpoint = currentArrow[1]\n\n        const slope = (endpoint[1] - startpoint[1]) / (endpoint[0] - startpoint[0])\n\n\n\n        if (IsOnLine(startpoint, endpoint, [point.x, point.y], slope)) {\n          tempArrows.splice(i, 1);\n          this.setState({\n            arrowPoints: tempArrows\n          })\n          return;\n        }\n\n      }\n\n\n\n    }\n    else if (this.state.circle === true) {\n      const stage = this.stageRef.getStage();\n      const point = stage.getPointerPosition();\n      this.setState({\n        circlePoints: [...this.state.circlePoints, [[point.x, point.y], [point.x, point.y]]]\n      });\n    }\n    else if (this.state.arrow === true) {\n      const stage = this.stageRef.getStage();\n      const point = stage.getPointerPosition();\n      this.setState({\n        arrowPoints: [...this.state.arrowPoints, [[point.x, point.y], [point.x, point.y]]]\n      });\n    }\n  };\n\n  handleMouseMove = e => {\n\n    if (!this._drawing) {\n      return;\n    }\n\n    if(this.state.brush === true) {\n      const stage = this.stageRef.getStage();\n      const point = stage.getPointerPosition();\n      const { lines } = this.state;\n\n      let lastLine = lines[lines.length - 1];\n      // add point\n      lastLine = lastLine.concat([point.x, point.y]);\n\n      // replace last\n      lines.splice(lines.length - 1, 1, lastLine);\n      this.setState({\n        lines: lines.concat()\n      });\n    }\n    else if (this.state.circle === true) {\n      this.makeElement(this.state.circlePoints)\n    }\n    else if (this.state.arrow === true) {\n      this.makeElement(this.state.arrowPoints)\n    }\n  };\n\n  handleMouseUp = () => {\n    this._drawing = false;\n  };\n\n\n  eraserClick = (evt) => {\n    this.setState ({\n      eraser: true,\n      currentTool: 'eraser',\n      brush: false,\n      circle: false,\n      arrow: false,\n    })\n  }\n\n  brushClick = (evt) => {\n    this.setState ({\n      eraser: false,\n      currentTool: 'brush',\n      brush: true,\n      circle: false,\n      arrow: false,\n    })\n  }\n\n  clearClick = (evt) => {\n    this.setState ({\n      lines: [],\n      circlePoints: [],\n      arrowPoints: [],\n\n    })\n  }\n\n  circleClick = (evt) => {\n    this.setState ({\n      eraser: false,\n      currentTool: 'circle',\n      brush: false,\n      circle: true,\n      arrow: false,\n    })\n  }\n\n  arrowClick = (evt) => {\n    this.setState ({\n      eraser: false,\n      currentTool: 'arrow',\n      brush: false,\n      circle: false,\n      arrow: true,\n    })\n  }\n\n\n\n  render() {\n    const stageWidth = window.innerWidth / 2.4;\n    const stageHeight = window.innerWidth / 2.4;\n\n    return (\n      <div id=\"MapDiv\">\n        <MapSideBar\n          brushClick={this.brushClick}\n          arrowClick={this.arrowClick}\n          circleClick={this.circleClick}\n          clearClick={this.clearClick}\n          eraserClick={this.eraserClick}\n          currentTool={this.state.currentTool}\n        />\n        <Stage\n          container={'#mapRow'}\n          width={stageWidth}\n          height={stageHeight}\n          onContentMousedown={this.handleMouseDown}\n          onContentMousemove={this.handleMouseMove}\n          onContentMouseup={this.handleMouseUp}\n          ref={node => {\n            this.stageRef = node;\n          }}\n        >\n          <Layer>\n            <MapImg />\n          </Layer>\n          <Layer>\n            {\n              RenderCircles(this.state.circlePoints)\n            }\n          </Layer>\n          <Layer>\n            {\n              RenderArrows(this.state.arrowPoints)\n            }\n          </Layer>\n          <Layer>\n            {\n              this.state.lines.map((line, i) => (<Line key={i} points={line} stroke=\"red\" fill={'red'}/>))\n            }\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}